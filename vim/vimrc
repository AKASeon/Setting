
" Uncomment the following to have Vim jump to the last position when"
" reopening a file"
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" Syntax Highlighting "
if has("syntax")                    " copy 시 오류 수정해야함. "
    syntax on
endif

set autoindent                      " 이전 라인 들여쓰기 하면 개행시 다음 라인에도 자동 적용 "
set smartindent                     " autoindent 와 비슷 몇몇 c언어의 문법에 대해 좀더 똑똑하게 들여 쓰기를 적용 "
set cindent                         " 좀더 똑똑하게 c 언어의 문법에 맞게 들여 쓰기 적용 "

set scrolloff=4                     " 스크롤 할때 위아래 줄 유지, 화살표 아래로 내리다 보면 아래에서 4줄 유지한 상황에서 스크롤 됨 "
set tabstop=4                       " 탭을 4칸 "
set softtabstop=4                   " tab키를 입력 하였을때 입력될 너비 "
set shiftwidth=4                    " 자동 들여쓰기 4칸 "
set shiftround                      " "
set expandtab                       " 탭대신 스페이스 "

set textwidth=100                   " 글자수 100자 이상이면 자동 개행 "

set hlsearch                        " / ? 명령등으로 찾은 문자열을 하이라이트"
set incsearch                       " 글자를 치면 그에 맞는것을 치는 동안 보여주기 "

filetype on                       " 파일 종류에 따른 구문을 강조 표시

set ls=2                            " 항상 status 라인을 표시 "

set ut=300000                       " 몇 milliseconds 후에 swap 파일 생성 5분 "
set uc=100                          " 몇 글자 이상 써야 swap 파일 생성 "

" Show Function name"
fun! ShowFuncName()
    let lnum = line(".")
    let col = col(".")
    echohl ModeMsg
    echo getline(search("^[^ \t#/]\\{2}.*[^:]\s*$", 'bW'))
    echohl None
    call search("\\%" . lnum . "l" . "\\%" . col . "c")
endfun

" Key Map "
map f :call ShowFuncName() <CR>

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///Users/DoO/.vim/plugin/'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Avoid a name conflict with L9
"Plugin 'user/L9', {'name': 'newL9'}

" add my Plugin
Plugin 'AutoComplPop'
Plugin 'Pydiction'  
Plugin 'Tagbar'    
Plugin 'The-NERD-tree'
Plugin 'a.vim'       
Plugin 'indentpython.vim' 
"Plugin 'instant-markdown.vim'
Plugin 'pathogen.vim'
Plugin 'python.vim'         
Plugin 'taglist-plus'      
Plugin 'taglist.vim'  
Plugin 'derekwyatt/vim-scala'

" All of your Plugins must be added before the following line
call vundle#end()            " required 

filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


" For python http://www.vim.org/scripts/script.php?script_id=790 "
let python_version_2=1              " python 2 문법"
let python_highlight_all=1          " 모든 강조 기능을 on"

" Python Tab-complete http://www.vim.org/scripts/script.php?script_id=850 "
filetype plugin on
let g:pydiction_location='~/.vim/pydiction'
let g:pydiction_menu_height=3

" scala
let g:scala_use_builtin_tagbar_defs = 1

